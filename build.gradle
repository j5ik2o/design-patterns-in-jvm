plugins {
	id "com.diffplug.spotless" version "6.22.0"
	id 'org.jetbrains.kotlin.jvm' version '1.9.20'
	id 'scala'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	implementation "io.vavr:vavr:0.10.4"
	implementation "org.jetbrains.kotlin:kotlin-stdlib"
	implementation 'org.scala-lang:scala-library:2.13.12'
}

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// don't need to set target, it is inferred from java

		// apply a specific flavor of google-java-format
		googleJavaFormat('1.8').aosp().reflowLongStrings()
		// make sure every file has the following copyright header.
		// optionally, Spotless can set copyright years by digging
		// through git history (see "license" section below)
		licenseHeader '/* (C)$YEAR */'
	}
	kotlin {
		// by default the target is every '.kt' and '.kts` file in the java sourcesets
		ktfmt()    // has its own section below
		// ktlint()   // has its own section below
		// diktat()   // has its own section below
		// prettier() // has its own section below
		licenseHeader '/* (C)$YEAR */' // or licenseHeaderFile
	}
	kotlinGradle {
		target '*.gradle.kts' // default target for kotlinGradle
		ktlint() // or ktfmt() or prettier()
	}
	scala {
		// by default, all `.scala` and `.sc` files in the java sourcesets will be formatted

		scalafmt() // has its own section below

		licenseHeader '/* (C) $YEAR */', 'package ' // or licenseHeaderFile
		// note the 'package ' argument - this is a regex which identifies the top
		// of the file, be careful that all of your sources have a package declaration,
		// or pick a regex which works better for your code
	}
}
